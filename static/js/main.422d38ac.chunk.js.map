{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.422d38ac.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"../App.css\";\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button cla\r\n                        ssName=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" +  text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{ \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{ \r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n\r\n    const handleCopy = () => {\r\n        console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n   \r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState(''); \r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'white':'white', color: props.mode==='dark'?'black':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { Fragment, useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      setInterval(() => {\n        document.title = \"TextUtils is Amazing\";\n      }, 2000);\n      setInterval(() => {\n        document.title = \"Install TextUtils\";\n      }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n      {/* <Navbar/> */}\n      {/* <Router> */}\n        {/* <Fragment> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <div className=\"container my-3\">\n          <Alert alert={alert} />\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About/>}>\n            </Route>\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>}>\n            </Route>\n          </Routes> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n        </div>\n        {/* </Fragment> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}